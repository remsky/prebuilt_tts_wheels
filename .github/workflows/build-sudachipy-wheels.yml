name: Build SudachiPy ARM64 Linux Wheels

on:
  workflow_dispatch: # Allow manual triggering
    inputs:
      version:
        description: 'Version of SudachiPy to build (e.g., 0.6.10)'
        required: true
        default: '0.6.10'

# Add permissions needed to create releases
permissions:
  contents: write

jobs:
  build_linux_arm64:
    name: Build SudachiPy Linux ARM64 Wheels
    runs-on: ubuntu-24.04-arm
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.5.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Rust and dependencies
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Install Maturin
        run: pip install maturin # Install the build backend

      - name: Build wheel
        run: |
          mkdir -p wheelhouse
          # No need to install wheel/setuptools here, pip wheel handles it
          pip wheel --wheel-dir wheelhouse sudachipy==${{ github.event.inputs.version }}

      - name: Upload Linux Wheels Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-wheels-${{ matrix.python-version }} # Unique name per python version
          path: wheelhouse/*.whl

  release:
    name: Create GitHub Release for Linux ARM64
    needs: [build_linux_arm64] # Only depends on the Linux build job now
    runs-on: ubuntu-latest
    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          # No name specified, download all artifacts
          path: artifacts # Download all artifacts into the 'artifacts' directory

      - name: List downloaded files # Optional: for debugging
        run: ls -R artifacts

      - name: Create Release and Upload Wheels
        uses: softprops/action-gh-release@v2
        with:
          tag_name: sudachipy-v${{ github.event.inputs.version }}-linux-arm64 # Specific tag for Linux ARM64
          name: SudachiPy v${{ github.event.inputs.version }} Linux ARM64 Wheels # Specific name
          files: artifacts/*/*.whl # Upload all .whl files from all subdirectories in artifacts
          make_latest: true # Keep as latest release for this specific build type
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
