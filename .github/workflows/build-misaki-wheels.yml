name: Build Misaki Multi-Platform Wheels

on:
  workflow_dispatch: # Allow manual triggering
    inputs:
      version:
        description: 'Version of Misaki to build'
        required: true
        default: '0.9.4'

# Add permissions needed to create releases
permissions:
  contents: write

jobs:
  build_amd64_wheels:
    name: Build AMD64 Wheels
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl git gnupg lsb-release wget
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
          echo "deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/kitware.list
          sudo apt-get update
          sudo apt-get install -y cmake
          cmake --version
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          python -m pip install --upgrade pip setuptools wheel

      - name: Build wheel
        run: |
          mkdir -p wheelhouse
          pip wheel --wheel-dir wheelhouse "misaki[en,ja,ko,zh]==${{ github.event.inputs.version }}"

      - name: Upload AMD64 Wheels
        uses: actions/upload-artifact@v4
        with:
          name: misaki-wheels-amd64-py${{ matrix.python-version }}
          path: wheelhouse/*.whl

  build_arm64_wheels:
    name: Build ARM64 Wheels
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build ARM64 wheel in Docker
        run: |
          mkdir -p wheelhouse
          docker buildx build --platform linux/arm64 \
            --build-arg PYTHON_VERSION=${{ matrix.python-version }} \
            --build-arg PACKAGE_VERSION=${{ github.event.inputs.version }} \
            -f .github/workflows/misaki-build.Dockerfile \
            --load \
            -t misaki-builder .
          docker run --rm \
            -v $(pwd)/wheelhouse:/wheelhouse \
            -e PACKAGE_VERSION=${{ github.event.inputs.version }} \
            misaki-builder

      - name: Upload ARM64 Wheels
        uses: actions/upload-artifact@v4
        with:
          name: misaki-wheels-arm64-py${{ matrix.python-version }}
          path: wheelhouse/*.whl

  create_release:
    name: Create GitHub Release
    needs: [build_amd64_wheels, build_arm64_wheels]
    runs-on: ubuntu-latest
    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded files
        run: ls -R artifacts

      - name: Prepare release assets
        run: |
          mkdir release_assets
          cp -f artifacts/misaki-wheels-*/*.whl release_assets/ || true
          echo "--- Contents of release_assets ---"
          ls -l release_assets
          echo "----------------------------------"

      - name: Create Release and Upload Wheels
        uses: softprops/action-gh-release@v2
        with:
          tag_name: misaki-v${{ github.event.inputs.version }}
          name: Misaki v${{ github.event.inputs.version }} Multi-Platform Wheels
          files: release_assets/*.whl
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
