name: Build Misaki Multi-Platform Wheels

on:
  workflow_dispatch: # Allow manual triggering
    inputs:
      version:
        description: 'Version of Misaki to build'
        required: true
        default: '0.9.3'

# Add permissions needed to create releases
permissions:
  contents: write

jobs:
  build_wheels:
    name: Build Misaki Wheels (${{ matrix.os }}-${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [x64, arm64]
        python-version: ["3.9", "3.10", "3.11"]
        include:
          - os: ubuntu-latest
            arch: x64
            platform: linux/amd64
          - os: ubuntu-latest
            arch: arm64
            platform: linux/arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}

      - name: Set up QEMU for ARM64 emulation
        if: matrix.arch == 'arm64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.arch == 'arm64' && 'aarch64-unknown-linux-gnu' || 'x86_64-unknown-linux-gnu' }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install maturin

      - name: Build wheel
        run: |
          mkdir -p wheelhouse
          pip wheel --no-deps --wheel-dir wheelhouse "misaki[en,ja,ko,zh]==${{ github.event.inputs.version }}"

      - name: List wheelhouse contents
        run: ls -R wheelhouse

      - name: Upload Wheels Artifact
        uses: actions/upload-artifact@v4
        with:
          name: misaki-wheels-${{ matrix.os }}-${{ matrix.arch }}-py${{ matrix.python-version }}
          path: wheelhouse/*.whl

  release:
    name: Create GitHub Release
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded files
        run: ls -R artifacts

      - name: Prepare release assets
        run: |
          mkdir release_assets
          cp -f artifacts/misaki-wheels-*/*.whl release_assets/ || true
          echo "--- Contents of release_assets ---"
          ls -l release_assets
          echo "----------------------------------"

      - name: Create Release and Upload Wheels
        uses: softprops/action-gh-release@v2
        with:
          tag_name: misaki-v${{ github.event.inputs.version }}
          name: Misaki v${{ github.event.inputs.version }} Multi-Platform Wheels
          files: release_assets/*.whl
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
